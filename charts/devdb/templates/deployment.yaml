apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.services.api.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: api
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "devdb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "devdb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: api
    spec:
      serviceAccountName: devdb
      containers:
      - name: {{ .Values.services.api.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: {{ .Values.services.api.port }}
        resources:
          {{- toYaml .Values.resources.api | nindent 10 }}
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.services.api.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /health
            port: {{ .Values.services.api.port }}
          initialDelaySeconds: 5
          periodSeconds: 10
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config
        env:
        - name: REDIS_URL
          value: redis://{{ .Values.services.redis.name }}:{{ .Values.services.redis.port }}