apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.services.redis.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "devdb.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "devdb.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: cache
    spec:
      securityContext:
        fsGroup: 999
      containers:
      - name: redis
        image: "redis:7.2-alpine"
        ports:
        - containerPort: {{ .Values.services.redis.port }}
        resources:
          {{- toYaml .Values.resources.redis | nindent 10 }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.services.redis.port }}
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 10
        volumeMounts:
        - name: redis-data
          mountPath: /data
        command:
        - redis-server
        - --appendonly
        - "yes"
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: {{ .Values.services.redis.name }}-data
