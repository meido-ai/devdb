name: Build and Push API Image
on:
  push:
    branches:
      - main
    paths:
      - api/**
      - '.github/workflows/build-and-push-devdb-api.yml'
  workflow_dispatch:

jobs:
  build-node-app:
    runs-on: ubuntu-latest
    outputs:
      version_tag: ${{ steps.generate-version.outputs.version_tag }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - id: generate-version
      name: "Generate Version"
      uses: paulhatch/semantic-version@v5.4.0
      with:
        tag_prefix: "v"
        major_pattern: "(MAJOR)"
        minor_pattern: "(MINOR)"
        version_format: "${major}.${minor}.${patch}"
        bump_each_commit: false

  build-container-image:
    runs-on: ubuntu-latest
    needs: build-node-app
    permissions:
      contents: write
      packages: write
      issues: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
      
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create tag
      uses: rickstaa/action-create-tag@v1.7.2
      with:
        tag: ${{ needs.build-node-app.outputs.version_tag }}
 
    - name: Build and push Dev DB API image
      uses: docker/build-push-action@v5
      with:
        context: ./api
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/devdb-api:${{ needs.build-node-app.outputs.version_tag }}
          ghcr.io/${{ github.repository_owner }}/devdb-api:latest
        labels: |
          org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.version=${{ needs.build-node-app.outputs.version_tag }}
          org.opencontainers.image.licenses=MIT

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      id: scan
      with:
        image-ref: ghcr.io/${{ github.repository_owner }}/devdb-api:${{ needs.build-node-app.outputs.version_tag }}
        format: 'json'
        output: 'trivy-results.json'
        exit-code: '0'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Create Security Issues
      if: always()
      uses: actions/github-script@v7.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const trivyResults = JSON.parse(fs.readFileSync('trivy-results.json', 'utf8'));
          
          for (const result of trivyResults.Results) {
            if (!result.Vulnerabilities) continue;
            
            for (const vuln of result.Vulnerabilities) {
              const title = `Security: ${vuln.PkgName} ${vuln.InstalledVersion} has ${vuln.Severity} vulnerability`;
              
              const issues = await github.rest.issues.listForRepo({
                owner: context.repo.owner,
                repo: context.repo.repo,
                state: 'open',
                labels: ['security'],
                creator: 'github-actions[bot]'
              });
              
              const existingIssue = issues.data.find(issue => issue.title === title);
              if (existingIssue) continue;
              
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: `
                **Package:** ${vuln.PkgName}
                **Current Version:** ${vuln.InstalledVersion}
                **Fixed Version:** ${vuln.FixedVersion || 'Not available'}
                **Severity:** ${vuln.Severity}
                **Description:** ${vuln.Description}
                
                **References:**
                ${vuln.References ? vuln.References.join('\n') : 'None'}
                
                This issue was automatically created by the Trivy security scanner.
                `,
                labels: ['security', vuln.Severity.toLowerCase()]
              });
            }
          }

  create-release:
    runs-on: ubuntu-latest
    needs: [build-node-app, build-container-image]
    permissions:
      contents: write

    steps:
    - name: Create a GitHub release
      uses: actions/github-script@v7.0.1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          await github.request(`POST /repos/${{ github.repository }}/releases`, {
            tag_name: "${{ needs.build-node-app.outputs.version_tag }}",
            name: "${{ needs.build-node-app.outputs.version_tag }}",
            generate_release_notes: true
          });
